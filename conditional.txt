# CASE WHEN 

	- Used for conditional logic wthin queries. 
	
	> CASE 
	-> WHEN condition1 THEN result1
	-> WHEN condition1 THEN result2
	-> ...
	-> ELSE default_result
	-> END 

	Example: 
		SELECT
		(CASE WHEN month = 'Jan' THEN revenue END) AS Jan_Revenue
		FROM table
		GROUP BY id;

	- When month = 'Jan', then we select the value of the item in the revenue column. 
	- This value will be located in its associated id row under Jan_Revenue column. 

# WHERE 
	
	- used to filter rows in a query
	- specifies the criteria that must be met for a record (or row) to be included in the result set. 
	- used to apply a condition or set of conditions on the data that we are retreiving or modifying. 
	- the WHERE clause can include sny of the following comparison operators. 
		= (equal to)
		!= or <> (not equal to)
		<, <=, > >= (figure it out) 
		BETWEEN (range check)  
		IN (match against a list of values) 
		LIKE (pattern matching)
		IS NULL (null values) 

	Ex. 
	> SELECT * 
	-> FROM table_name
	-> WHERE condition;


# EXISTS
	
	- logical operator that tests whether a subquery does not return any rows. 
		It returns TRUE if the subquery does not produce any results, and FALSE if the subquery produces one or more results. 
	Ex. 
	> SELECT column1, column2
	-> FROM table1 
	-> WHERE NOT EXISTS (
	-> 	SELECT 1
	-> 	FROM table2
	-> 	WHERE condition
	-> );

		- the NOT EXISTS clause is used in the WHERE statement, typically to filter records form the outer query based on whether a related subquery returns any results. 
		- if the subquery returns no rows, NOT EXISTS evaluates to TRUE, and the outer query proceeds to include the current row. 
		- if the subquery returns one or more rows, NOT EXISTS evaluates to FALSE.
